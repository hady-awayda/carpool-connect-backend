name: CI/CD Pipeline Development

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: Development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
          cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_CACHE_REPOSITORY }}:cache
          cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_CACHE_REPOSITORY  }}:cache,mode=max,image-manifest=true,oci-mediatypes=true

      - name: Deploy to EC2 and run container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/carpool-connect-backend
            sudo git switch dev
            sudo git pull
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            if [ $(docker ps -q --filter "name=backend-dev") ]; then
              docker stop backend-dev
              docker rm backend-dev
            fi
            docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest
            docker run -d --name backend-dev -p 80:80 ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest